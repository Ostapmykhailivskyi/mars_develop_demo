{"version":3,"sources":["config.js","components/roversContext.js","components/Menu/DropdownTemplate.js","components/helpers.js","components/Menu/RoversMenu.js","components/Menu/CamerasMenu.js","components/Menu/SolMenuView.js","components/Menu/SolsMenu.js","components/PhotoDisplayArea/PhotoTemplate.js","components/PhotoDisplayArea/Photos.js","components/PhotoDisplayArea/Pagination.js","MarsDevelopView.js","MarsDevelop.js","index.js"],"names":["require","config","module","exports","apiKey","process","rovers","name","cameras","initState","availableSols","availableCameras","selectedSol","selectedRover","selectedCamera","solData","MarsContext","createContext","marsReducer","state","action","type","camerasOnRover","find","rover","payload","includes","photosData","camera","sols","sol","Error","useRoverContext","context","React","useContext","undefined","MarsProvider","children","useReducer","value","dispatch","Provider","DropDown","props","FormControl","InputLabel","id","placeholder","Select","labelId","onChange","e","handleSelect","target","className","items","length","MenuItem","disabled","dependency","map","item","getDataFromNasa","url","a","fetch","then","response","body","rb","reader","getReader","ReadableStream","start","controller","push","read","done","close","enqueue","stream","Response","headers","text","result","JSON","parse","Rovers","data","photo_manifest","photos","Cameras","forEach","obj","SolMenuView","useStyles","renderGroup","ListboxComponent","classes","Autocomplete","style","width","disableListWrap","options","toString","renderInput","params","TextField","label","renderOption","option","Typography","noWrap","renderRow","index","cloneElement","top","SolMenu","OuterElementContext","OuterElementType","forwardRef","ref","outerProps","other","itemData","Children","toArray","theme","useTheme","smUp","useMediaQuery","breakpoints","up","noSsr","itemCount","itemSize","getChildSize","child","isValidElement","ListSubheader","gridRef","useRef","useEffect","current","resetAfterIndex","useResetCache","height","reduce","b","outerElementType","innerElementType","overscanCount","makeStyles","listbox","boxSizing","padding","margin","textContent","res","component","group","key","Photo","src","alt","Photos","PhotoTemplate","img_src","Pagination","switchPage","currentPage","totalPages","Button","variant","color","onClick","MarsDevelopView","currentPosts","MarsDevelop","useState","setCurrentPage","setTotalPages","setCurrentPosts","indexOfLastPost","indexOfFirstPost","posts","slice","Math","ceil","count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91bb3e00.chunk.js","sourcesContent":["const dotenv = require(\"dotenv\");\ndotenv.config();\nmodule.exports = {\n  apiKey: process.env.REACT_APP_API_KEY\n};","import React, {createContext, useReducer} from \"react\";\nimport {node} from \"prop-types\";\n\nconst rovers = [\n  {\n    name: \"Curiosity\",\n    cameras: [\"FHAZ\", \"RHAZ\", \"MAST\", \"CHEMCAM\", \"MAHLI\", \"MARDI\", \"NAVCAM\"]\n  }, {\n    name: \"Opportunity\",\n    cameras: [\"ENTRY\", \"FHAZ\", \"RHAZ\", \"NAVCAM\", \"PANCAM\", \"MINITES\"]\n  },\n  {\n    name: \"Spirit\",\n    cameras: [\"ENTRY\", \"FHAZ\", \"RHAZ\", \"NAVCAM\", \"PANCAM\", \"MINITES\"]\n  }\n];\n\nconst initState = {\n  rovers,\n  availableSols: [],\n  availableCameras: [],\n  selectedSol: \"\",\n  selectedRover: \"\",\n  selectedCamera: \"\",\n  solData: []\n};\n\nconst MarsContext = createContext();\n\nfunction marsReducer(state, action) {\n  switch (action.type) {\n    case \"selectRover\": {\n      const camerasOnRover = rovers.find(rover => rover.name === action.payload.name).cameras;\n      let selectedCamera = state.selectedCamera;\n\n      if (state.selectedCamera && !camerasOnRover.includes(state.selectedCamera)) {\n        selectedCamera = \"\";\n      }\n\n      return {\n        ...state,\n        selectedRover: action.payload.name,\n        selectedCamera,\n        availableCameras: camerasOnRover,\n        availableSols: [],\n        selectedSol: \"\",\n        photosData: action.payload.photosData\n      };\n    }\n    case \"selectCamera\": {\n      return {...state, selectedCamera: action.payload.camera, availableSols: action.payload.sols};\n    }\n    case \"selectSol\": {\n      return {...state, selectedSol: action.payload.sol, solData: action.payload.solData};\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction useRoverContext() {\n  const context = React.useContext(MarsContext);\n  if (context === undefined) {\n    throw new Error(\"useCount must be used within a CountProvider\");\n  }\n  return context;\n}\nMarsProvider.propTypes = {\n  children: node\n};\nfunction MarsProvider({children}) {\n  const [state, dispatch] = useReducer(marsReducer, initState);\n\n  const value = {state, dispatch};\n  return <MarsContext.Provider value={value}>{children}</MarsContext.Provider>;\n}\nexport {MarsProvider, useRoverContext};","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {func, string, any} from \"prop-types\";\n\nconst DropDown = (props) => {\n  const handleChange = (e) => {\n    props.handleSelect(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <InputLabel id=\"demo-simple-select-label\">{props.placeholder}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        onChange={handleChange}\n        className=\"customDropdown\"\n      >\n        {props.items.length === 0 ? <MenuItem disabled={true}>Please select {props.dependency} before</MenuItem> : null}\n        {props.items.map((item) => <MenuItem value={item} key={item}>{item}</MenuItem>)}\n      </Select>\n    </FormControl>\n  );\n};\n\nDropDown.propTypes = {\n  handleSelect: func,\n  placeholder: string,\n  items: any,\n  dependency: string\n};\n\nexport default DropDown;","import {apiKey} from \"../config\";\n\nexport const getDataFromNasa = async (url) => {\n  return await fetch(`https://api.nasa.gov/mars-photos/api/v1/${url}api_key=${apiKey}`\n  )\n    .then(response => response.body)\n    .then(rb => {\n      const reader = rb.getReader();\n\n      return new ReadableStream({\n        start(controller) {\n          // The following function handles each data chunk\n          function push() {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(({done, value}) => {\n              if (done) {\n                controller.close();\n                return;\n              }\n              // Get the data and send it to the browser via the controller\n              controller.enqueue(value);\n              push();\n            });\n          }\n\n          push();\n        }\n      });\n    })\n    .then(stream => {\n      return new Response(stream, {headers: {\"Content-Type\": \"text/html\"}}).text();\n    })\n    .then(result => {\n      return (JSON.parse(result));\n    });\n};\n","import React from \"react\";\nimport DropDown from \"./DropdownTemplate\";\nimport {useRoverContext} from \"../roversContext\";\nimport {getDataFromNasa} from \"../helpers\";\n\nconst Rovers = () => {\n  const {dispatch, state} = useRoverContext();\n\n  const handleRoverSelect = (name) => {\n    getDataFromNasa(`manifests/${name}?`).then((data) => {\n      dispatch({type: \"selectRover\", payload: {name, photosData: data.photo_manifest.photos}});\n    });\n  };\n\n  return (\n    <DropDown\n      placeholder={\"Rover\"}\n      items={state.rovers.map(rover => rover.name)}\n      handleSelect={handleRoverSelect}\n    />\n  );\n};\n\nexport default Rovers;","import React from \"react\";\nimport DropDown from \"./DropdownTemplate\";\nimport {useRoverContext} from \"../roversContext\";\n\nconst Cameras = () => {\n  const {dispatch, state} = useRoverContext();\n\n  const handleCameraSelect = (camera) => {\n    let sols = [];\n    state.photosData.forEach(obj => {\n      if (obj.cameras.includes(camera)) sols.push(obj);\n    });\n    dispatch({type: \"selectCamera\", payload: {camera, sols}});\n  };\n\n  return (\n    <DropDown\n      dependency={\"rover\"}\n      placeholder={\"Camera\"}\n      items={state.availableCameras}\n      handleSelect={handleCameraSelect}\n    />\n  );\n};\n\nexport default Cameras;","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {useRoverContext} from \"../roversContext\";\nimport {Typography} from \"@material-ui/core\";\nimport {any} from \"prop-types\";\n\nconst SolMenuView = ({useStyles, handleSelect, renderGroup, ListboxComponent}) => {\n  const classes = useStyles();\n  const {state} = useRoverContext();\n\n  return (\n    <Autocomplete\n      value={state.selectedSol}\n      onChange={handleSelect}\n      id=\"virtualize-demo\"\n      classes={classes}\n      style={{ width: 100 }}\n      disableListWrap\n      ListboxComponent={ListboxComponent}\n      renderGroup={renderGroup}\n      options={state.availableSols.map((obj) => obj.sol.toString())}\n      renderInput={(params) => <TextField label=\"Sol\" {...params}/>}\n      renderOption={(option) => <Typography noWrap>{option}</Typography>}\n    />\n  );\n};\nSolMenuView.propTypes = {\n  useStyles: any,\n  handleSelect: () => {},\n  renderGroup: () => {},\n  ListboxComponent: any\n};\nexport default SolMenuView;","import React from \"react\";\nimport PropTypes, { number} from \"prop-types\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { VariableSizeList } from \"react-window\";\nimport {makeStyles} from \"@material-ui/core\";\nimport SolMenuView from \"./SolMenuView\";\nimport {useRoverContext} from \"../roversContext\";\nimport {getDataFromNasa} from \"../helpers\";\n\nconst LISTBOX_PADDING = 0; // px\n\nconst renderRow = (props) => {\n  const { data, index, style } = props;\n  return React.cloneElement(data[index], {\n    style: {\n      ...style,\n      top: style.top + LISTBOX_PADDING,\n    },\n  });\n};\n\nrenderRow.propTypes = {\n  data: {},\n  index: number,\n  style: {}\n};\n\nconst SolMenu = () => {\n  const {state, dispatch} = useRoverContext();\n\n\n  const OuterElementContext = React.createContext({});\n\n  const OuterElementType = React.forwardRef(function OuterElementType (props, ref){\n    const outerProps = React.useContext(OuterElementContext);\n    return <div ref={ref} {...props} {...outerProps} />;\n  });\n\n  const useResetCache = (data) => {\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n      if (ref.current != null) {\n        ref.current.resetAfterIndex(0, true);\n      }\n    }, [data]);\n    return ref;\n  };\n\n  // Adapter for react-window\n  const ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n    const { children, ...other } = props;\n    const itemData = React.Children.toArray(children);\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"), { noSsr: true });\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 36 : 48;\n\n    const getChildSize = (child) => {\n      if (React.isValidElement(child) && child.type === ListSubheader) {\n        return 48;\n      }\n\n      return itemSize;\n    };\n\n    const getHeight = () => {\n      if (itemCount > 8) {\n        return 8 * itemSize;\n      }\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n\n    const gridRef = useResetCache(itemCount);\n\n    return (\n      <div ref={ref}>\n        <OuterElementContext.Provider value={other}>\n          <VariableSizeList\n            itemData={itemData}\n            height={getHeight() + 2 * LISTBOX_PADDING}\n            width=\"100%\"\n            ref={gridRef}\n            outerElementType={OuterElementType}\n            innerElementType=\"ul\"\n            itemSize={(index) => getChildSize(itemData[index])}\n            overscanCount={5}\n            itemCount={itemCount}\n          >\n            {renderRow}\n          </VariableSizeList>\n        </OuterElementContext.Provider>\n      </div>\n    );\n  });\n\n  ListboxComponent.propTypes = {\n    children: PropTypes.node,\n  };\n\n  const renderGroup = (params) => [\n    <ListSubheader key={params.key} component=\"div\">\n      {params.group}\n    </ListSubheader>,\n    params.children,\n  ];\n\n  const useStyles = makeStyles({\n    listbox: {\n      boxSizing: \"border-box\",\n      \"& ul\": {\n        padding: 0,\n        margin: 0,\n      },\n    },\n  });\n\n  const handleSelect = async (e) => {\n    const res = await getDataFromNasa(\n      `rovers/${state.selectedRover}/photos?sol=${e.target.textContent}&camera=${state.selectedCamera}&`\n    );\n    dispatch({type: \"selectSol\", payload: {sol: e.target.textContent, solData: res.photos}});\n  };\n\n  return(\n    <SolMenuView\n      handleSelect={handleSelect}\n      useStyles={useStyles}\n      ListboxComponent={ListboxComponent}\n      renderGroup={renderGroup}\n    />\n  );\n};\nexport default SolMenu;","import React from \"react\";\nimport {string} from \"prop-types\";\n\nconst Photo = ({src, alt}) => {\n  return(\n    <div className={\"PhotoWrapper\"}>\n      <img src={src} alt={alt} width={\"100%\"}/>\n    </div>\n  );\n};\n\nPhoto.propTypes = {\n  src: string,\n  alt: string\n};\n\nexport default Photo;","import React from \"react\";\nimport PhotoTemplate from \"./PhotoTemplate\";\nimport {any} from \"prop-types\";\n\nconst Photos = ({photos}) => {\n  if (!photos.length) {\n    return (\n      <div className={\"emptyListTitle\"}>\n        <h1>\n          Select Rover, Camera and Sol to browse photo from MARS\n        </h1>\n      </div>\n    );\n  }\n\n  return(\n    <div className={\"PhotosList\"}>\n      {photos.map((obj) =>\n        <PhotoTemplate\n          key={obj.id}\n          alt={obj.id}\n          src={obj.img_src}\n        />\n      )}\n    </div>\n  );\n};\n\nPhotos.propTypes = {\n  photos: any\n};\n\nexport default Photos;","import React from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport {func, number} from \"prop-types\";\n\nconst Pagination = ({switchPage, currentPage, totalPages}) => {\n  return(\n    <div className={\"pageTurnButtons\"}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => switchPage(-1)}\n        disabled={currentPage === 1}\n      >\n        Back to previous page\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => switchPage(1)}\n        disabled={currentPage === totalPages}\n      >\n        Load more\n      </Button>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  switchPage: func,\n  currentPage: number,\n  totalPages: number,\n};\n\nexport default Pagination;","import React from \"react\";\nimport Rovers from \"./components/Menu/RoversMenu\";\nimport Cameras from \"./components/Menu/CamerasMenu\";\nimport Sols from \"./components/Menu/SolsMenu\";\nimport Photos from \"./components/PhotoDisplayArea/Photos\";\nimport Pagination from \"./components/PhotoDisplayArea/Pagination\";\nimport {number, array} from \"prop-types\";\n\nconst MarsDevelopView = ({currentPosts, currentPage, switchPage, totalPages}) => {\n  return(\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>Mars mission</h1>\n      </div>\n      <div className=\"Dropdowns\">\n        <Rovers/>\n        <Cameras/>\n        <Sols/>\n      </div>\n      <Photos\n        photos={currentPosts}\n      />\n      <div>\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          switchPage={switchPage}\n        />\n      </div>\n    </div>\n  );\n};\n\nMarsDevelopView.propTypes = {\n  currentPosts: array,\n  currentPage: number,\n  switchPage: () => {},\n  totalPages: number\n};\n\nexport default MarsDevelopView;","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport {useRoverContext} from \"./components/roversContext\";\nimport MarsDevelopView from \"./MarsDevelopView\";\n\nfunction MarsDevelop() {\n  const {state} = useRoverContext();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPosts, setCurrentPosts] = useState([]);\n\n  useEffect(() => {\n    const indexOfLastPost = currentPage * 25;\n    const indexOfFirstPost = indexOfLastPost - 25;\n    const posts = state.solData.slice(indexOfFirstPost, indexOfLastPost);\n    setCurrentPosts(posts);\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (!state.solData.length) return;\n    const posts = state.solData.slice(0, 25);\n    setTotalPages(Math.ceil(state.solData.length / 25));\n    setCurrentPosts(posts);\n  }, [state.selectedSol]);\n\n  const switchPage = (count) => {\n    setCurrentPage(currentPage + count);\n  };\n\n  return (\n    <MarsDevelopView\n      currentPosts={currentPosts}\n      currentPage={currentPage}\n      totalPages={totalPages}\n      switchPage={switchPage}\n    />\n  );\n}\n\nexport default MarsDevelop;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport MarsDevelop from \"./MarsDevelop\";\nimport {MarsProvider} from \"./components/roversContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MarsProvider>\n      <MarsDevelop/>\n    </MarsProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}